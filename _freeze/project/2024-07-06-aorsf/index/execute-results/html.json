{
  "hash": "f27761cc125ba6875dcba74800b3b19f",
  "result": {
    "markdown": "---\ntitle: 'Accelerated oblique random forests'\ndate: 2024-07-06\ndate-modified: today\nimage: featured.jpg\ncategories:\n  - R\n  - random forest\n  - machine learning\nsubtitle: >\n  Fast oblique random forests for regression, classification, and survival.\ndescription: ''\n\nlisting: \n- id: aorsf\n  sort: date desc\n  type: grid\n  grid-columns: 2\n  categories: false\n  sort-ui: false\n  filter-ui: false\n  fields: [image, title, description]\n  image-height: \"200\"\n---\n\n\nThe `aorsf` package is a software project dedicated to oblique random forests. It was originally the `obliqueRSF` package introduced in the [oblique random survival forest paper](https://pubmed.ncbi.nlm.nih.gov/36704751/), and had trouble with inefficiency and lack of features for interpretation. Today, it has grown into an R package that efficiently fits oblique random forests for classification, regression, and survival, with customized features to interpret them.\n\nWhen `aorsf` was reviewed by R OpenSci, one of my reviewers was Marvin N. Wright, author of the `ranger` package. At the time, `aorsf` was only designed to fit oblique random survival forests, and one of Marvin's [review comments](https://github.com/ropensci/software-review/issues/532/#issuecomment-1235275312) was\n\n> What about oblique RF for classification and regression? Do other packages implement the speedups used here? If not, why not have a fast oblique RF package for all outcomes instead of a specific one for survival?\n\nIt was a great question. Over the years there have been packages that provide specific types of oblique random forests, like [`obliqueRF`](https://CRAN.R-project.org/package=obliqueRF), [`RLT`](https://CRAN.R-project.org/package=RLT), [`rotationForest`](https://CRAN.R-project.org/package=rotationForest), and others. But, as far as I know, there was never an R package that brought oblique random forests together.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(aorsf)\nlibrary(obliqueRSF)\nlibrary(survival)\nlibrary(microbenchmark)\n\noptions(microbenchmark.unit=\"relative\")\n\nflc <- na.omit(survival::flchain)\nflc$futime <- pmax(flc$futime, 0.01)\n\nmicrobenchmark(\n obliqueRSF = ORSF(data = flc, \n                   time = 'futime', \n                   status = 'death', \n                   ntree = 10, \n                   verbose = FALSE),\n aorsf = orsf(futime + death ~ ., \n              data = flc, \n              n_tree = 10),\n times = 1\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nUnit: relative\n       expr      min       lq     mean   median       uq      max neval\n obliqueRSF 245.9676 245.9676 245.9676 245.9676 245.9676 245.9676     1\n      aorsf   1.0000   1.0000   1.0000   1.0000   1.0000   1.0000     1\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}